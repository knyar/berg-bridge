append_run_mode=setenv bootargs ${bootargs} runmode=${runmode};
autoload=no
baudrate=115200
board_manufacture_info=BRIDGEAA13251335
bootargs=console=ttyS0,115200 root=/dev/mtdblock6 mtdparts=atmel_nand:128k(bootstrap)ro,256k(uboot)ro,128k(env1),128k(env2),2M(linux),16M(config),-(root) rw rootfstype=jffs2
bootcmd=run catch_btn; run inst_if_required; run append_run_mode; run reset_leds; nand read ${kernel_load_address} ${kernel_flash_address} ${kernel_size}; bootm ${kernel_load_address}
bootdelay=1
catch_btn=setenv runmode standard; setenv loop 1; while test ${loop} -eq "1" ; do run flash_when_held; done; set_cloud_led 0; set_eth_led 0; set_zigbee_led 0
ethact=macb0
ethaddr=40:D8:55:01:CA:19
factory_fetch_image=dhcp; tftp 0x20800000 factory_flash.img
factory_run_image=source 0x20800000
factory_setup=run factory_fetch_image factory_run_image
fail_loop=setenv loop 1; while test ${loop} -eq "1" ; do led_seq 0; done
fileaddr=20000000
filesize=BB6734
flash_when_held=get_eng_btn; if test $? -eq 0; then setenv runmode engtest; led_seq 1; else setenv loop 0; fi;
gatewayip=10.10.0.1
inst_fetch_image=tftp ${kernelLoadAddr} ${factoryScriptFilename}
inst_if_required=if test "${runmode}" = "engtest"; then run inst_setup; fi;
inst_run_image=source ${kernelLoadAddr}
inst_setup=run factory_fetch_image factory_run_image
ipaddr=10.10.0.64
kernel_filename=uImage
kernel_flash_address=0xa0000
kernel_load_address=0x20800000
kernel_size=0x200000
mem_load_address=0x20000000
netmask=255.255.248.0
opt_filename=bridge_opt.jffs2
opt_flash_address=0x2a0000
opt_size=0x1600000
reset_leds=set_eth_led 0; set_zigbee_led 0; set_cloud_led 0;
rootfs_erase_size=0xe760000
rootfs_filename=rootfs.jffs2
rootfs_flash_address=0x18A0000
rootfs_write_size=0x1800000
serverip=10.10.0.1
stderr=serial
stdin=serial
stdout=serial
write_kernel=echo "Fetch + Write kernel"; mw.b ${mem_load_address} 0xff ${kernel_size}; tftp ${mem_load_address} ${kernel_filename}; nand erase ${kernel_flash_address} ${kernel_size}; nand write ${mem_load_address} ${kernel_flash_address} ${kernel_size};
write_opt=echo "Fetch + Write opt"; mw.b ${mem_load_address} 0xff ${opt_size}; tftp ${mem_load_address} ${opt_filename}; nand erase ${opt_flash_address} ${opt_size}; nand write ${mem_load_address} ${opt_flash_address} ${opt_size};
write_rootfs=echo "Fetch + Write rootfs"; mw.b ${mem_load_address} 0xff ${rootfs_write_size}; tftp ${mem_load_address} ${rootfs_filename}; set_cloud_led 1; nand erase ${rootfs_flash_address} ${rootfs_erase_size}; nand write ${mem_load_address} ${rootfs_flash_address} ${rootfs_write_size};
